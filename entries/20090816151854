Subject: Baking a cupcake
Content-Type: text/x-markdown
Alias: baking-cupcake
Tags: android,g1

Today I wanted to see if I could build a bootable image for my Tmobile G1.

<read-more>

### Setup...

 - modern Linux distro (Debian/testing here)
 - the [repo](http://source.android.com/download/using-repo) utility in your path ([download repo](http://android.git.kernel.org/repo))
 - 5G of disk space

### Primitive build...

Next let's create a new repository to work in...

    # mkdir mydroid
    # cd mydroid
    # repo init -u git://android.git.kernel.org/platform/manifest.git -b android-1.5r3

At this point you'll be prompted to tell the build system about yourself.  If you're already a 
git user, it will read the defaults from your git configuration (I think that's where it got
it from).

At this point only some meta data was downloaded.  You don't have any source code yet, so run...

    # repo sync

... to fetch all the sources from the kernel.org Android mirror site.  This could take a long time 
as it downloads about 1 gigabyte into the `.repo` directory... took about 30 min here.

As an aside, switching *repo* branches is done (to the best of my knowledge) by rerunning the `init` command
with a different `-b` option and then running `sync` to update the tree.  I may have this all wrong since
it takes just as long to do the `sync` as it did the first time :(

Now getting back to building, when `sync` is finished fetching things, you can continue with:

    # make

... this takes about an hour on my box.  It might work with `make -j10` but I have not tried.

### Now building it for real...

As before I start with a clean image (or just the image you cloned above)

    # mkdir mydroid
    # cd mydroid
    # repo init -u git://android.git.kernel.org/platform/manifest.git -b android-1.5r3
    # repo sync

But now, let's add the latest kernel...

    # cat > .repo/local_manifest.xml
    <?xml version="1.0" encoding="UTF-8"?>
    <manifest>
        <project path="kernel" name="kernel/msm" revision="refs/heads/android-msm-2.6.27"/>
    </manifest>

Then sync up again

    # repo sync

While that's happening, you need to connect your rooted phone running some community firmware (liky CyanogenMod),
and start the Android Debug Bridge:

    # sudo adb start-server

Next copy all the proprietary bits out of the image:

    # cd vendor/htc/dream-open
    # ./extract-files.sh
    # cd ..

Now were are ready to build

    # make

### Disclaimer...

Apologies, this post is a work in progress.  I ran out of time and I didn't have to finish this.  I'll collect my notes on building a new image here.  For now you can go and follow the links I've collected below.

### Resources...

 - [Johan de Koning](http://www.johandekoning.nl/)'s *Building Android 1.5* series:
   - [Getting the source](http://www.johandekoning.nl/index.php/2009/06/07/building-android-15-getting-the-source),
   - [Building the source](http://www.johandekoning.nl/index.php/2009/06/08/building-android-15-building-the-source/),
   - [Flashing the phone](http://www.johandekoning.nl/index.php/2009/07/03/building-android-1-5-flashing-the-phone/), and
   - [Google Apps and audio files](http://www.johandekoning.nl/index.php/2009/07/12/building-android-1-5-google-apps-and-audio-files/).

 - Jean-Baptiste Queru's [The state of the branches](http://groups.google.com/group/android-platform/browse_thread/thread/3670ed63a7d9e3ab) post
   
   This thread is full of interesting bits like thread merging strategies, branch names, and relse number decoding.

